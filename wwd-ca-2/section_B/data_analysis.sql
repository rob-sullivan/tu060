--Section B: Data Analysis and Queries Using SQL

-- 1.	Total Calls Made
-- we first create our query view
CREATE OR REPLACE VIEW CALLS_VIEW AS
SELECT 
    CALL_FACTS.CF_ID, 
    DATES_DIM.DATE_TIME, 
    CALL_DIM.CALL_TYPE_NAME, 
    (CASE 
        WHEN CALL_DIM.CALL_TYPE_NAME='peak' then 1
        WHEN CALL_DIM.CALL_TYPE_NAME='off-peak' then 2 
        WHEN CALL_DIM.CALL_TYPE_NAME='international' then 3
        WHEN CALL_DIM.CALL_TYPE_NAME='roaming' then 4
        WHEN CALL_DIM.CALL_TYPE_NAME='customer service' then 5 
        WHEN CALL_DIM.CALL_TYPE_NAME='voice mail' then 6
    END) AS CALL_ID, 
    CALL_FACTS.CUS_DIM_CUSD_ID,
    (CASE 
        WHEN CALL_DIM.CALL_TYPE_NAME='peak' THEN 1 ELSE 0
    END) AS PEAK,
    (CASE 
        WHEN CALL_DIM.CALL_TYPE_NAME='off-peak' THEN 1 ELSE 0
    END) AS OFF_PEAK,  
    (CASE 
        WHEN CALL_DIM.CALL_TYPE_NAME='international' THEN 1 ELSE 0
    END) AS INTER,
    (CASE 
        WHEN CALL_DIM.CALL_TYPE_NAME='roaming' THEN 1 ELSE 0
    END) AS ROAMING,
    (CASE 
        WHEN CALL_DIM.CALL_TYPE_NAME='customer service' THEN 1 ELSE 0
    END) AS CUS_SERVICE,
    (CASE 
        WHEN CALL_DIM.CALL_TYPE_NAME='voice mail' THEN 1 ELSE 0
    END) AS VOICE_MAIL,
    CALL_REVENUE_GENERATED
FROM CALL_FACTS
LEFT JOIN DATES_DIM
ON CALL_FACTS.DATES_DIM_DD_ID = DATES_DIM.DD_ID
LEFT JOIN CALL_DIM
ON CALL_FACTS.CALL_DIM_CD_ID = CALL_DIM.CD_ID;

SELECT * FROM CALLS_VIEW; --we then check it worked
-- we create a calls summary view


CREATE OR REPLACE VIEW CALLS_SUMMARY_VIEW AS
SELECT CALL_TYPE_NAME as CALLS_MADE, 
(COUNT(CUS_DIM_CUSD_ID)) AS TOTAL_CALLS,
(SUM(CALL_REVENUE_GENERATED)) AS REVENUE
FROM CALLS_VIEW 
GROUP BY CALL_TYPE_NAME 
ORDER BY TOTAL_CALLS DESC;



--we now get the max, min and average calls
SELECT TO_CHAR(MAX(TOTAL_CALLS), '999,999') as MAX, 
TO_CHAR(MIN(TOTAL_CALLS), '999,999') as MIN, 
TO_CHAR(AVG(TOTAL_CALLS), 'FM999,999.99') AS AVERAGE, 
TO_CHAR(STDDEV(TOTAL_CALLS), 'FM999,999.99') as STAND_DEV 
FROM CALLS_SUMMARY_VIEW;

--summary peak calls were the most made (81,895) and 
--customer service calls were the least made (10,366)

-- 2.	Total Revenue Generated (sum call_rate_id * duration)
SELECT CALLS_MADE, TOTAL_CALLS, TO_CHAR(REVENUE, 'FM$999,999') AS TOTAL_REVENUE  
FROM CALLS_SUMMARY_VIEW 
ORDER BY TOTAL_CALLS DESC;

-- 3. Total Calls made per Month vs Customer Service Calls Made
SELECT 
EXTRACT(MONTH FROM DATE_TIME) AS MONTH, 
SUM(PEAK+OFF_PEAK+INTER+ROAMING+CUS_SERVICE+VOICE_MAIL) AS "TOTAL CALLS MADE",
SUM(CUS_SERVICE) AS "CUSTOMER SERVICE CALLS MADE",
TO_CHAR(((SUM(CUS_SERVICE))/(SUM(PEAK+OFF_PEAK+INTER+ROAMING+CUS_SERVICE+VOICE_MAIL))*100), '999.99') AS "% OF TOTAL"
FROM CALLS_VIEW
GROUP BY EXTRACT(MONTH FROM DATE_TIME)
ORDER BY EXTRACT(MONTH FROM DATE_TIME);

-- 4.	Top 10 revenue generating customers who used customer service
CREATE OR REPLACE VIEW CUSTOMER_VIEW AS
SELECT 
CUS_DIM_CUSD_ID AS CUSTOMER_ID, 
SUM(PEAK) AS PEAK_CALLS, 
SUM(OFF_PEAK) AS OFF_PEAK_CALLS, 
SUM(INTER) AS INTERNATIONAL_CALLS, 
SUM(ROAMING) AS ROAMING_CALLS, 
SUM(CUS_SERVICE) AS CUSTOMER_SERVICE_CALLS, 
SUM(VOICE_MAIL) AS VOICE_MAIL_CALLS, 
SUM(PEAK+OFF_PEAK+INTER+ROAMING+CUS_SERVICE+VOICE_MAIL) AS TOTAL_CALLS_MADE,
SUM(CALL_REVENUE_GENERATED)as TOTAL_REVENUE_GENERATED
FROM CALLS_VIEW 
GROUP BY CUS_DIM_CUSD_ID;

SELECT * FROM CUSTOMER_VIEW WHERE CUSTOMER_ID=2806; --we then check it worked

DROP VIEW TOP_CUSTOMER_VIEW;
CREATE VIEW TOP_CUSTOMER_VIEW AS
SELECT CUSTOMER_ID, TOTAL_CALLS_MADE, CUSTOMER_SERVICE_CALLS, TOTAL_REVENUE_GENERATED
FROM CUSTOMER_VIEW
ORDER BY TOTAL_REVENUE_GENERATED DESC
fetch  first 10 rows only;

SELECT * FROM TOP_CUSTOMER_VIEW;

SELECT DISTINCT TOP_CUSTOMER_VIEW.CUSTOMER_ID, CALL_FACTS.CUSTOMER_AGE, CALL_FACTS.CUSTOMER_SOCIAL_GRADE, CALL_FACTS.CUSTOMER_CONTRACT_PLAN, TOP_CUSTOMER_VIEW.TOTAL_CALLS_MADE, TOP_CUSTOMER_VIEW.CUSTOMER_SERVICE_CALLS,TOP_CUSTOMER_VIEW.TOTAL_REVENUE_GENERATED, CALL_FACTS.CUSTOMER_ACTIVE
FROM TOP_CUSTOMER_VIEW
INNER JOIN CALL_FACTS
ON CALL_FACTS.CUS_DIM_CUSD_ID = TOP_CUSTOMER_VIEW.CUSTOMER_ID
ORDER BY TOP_CUSTOMER_VIEW.TOTAL_REVENUE_GENERATED DESC;

-- 5. Total Monthly Revenue Generated
SELECT 
EXTRACT(MONTH FROM DATE_TIME) AS MONTH, 
SUM(PEAK+OFF_PEAK+INTER+ROAMING+CUS_SERVICE+VOICE_MAIL) AS "TOTAL CALLS MADE",
TO_CHAR(SUM(CALL_REVENUE_GENERATED), 'FM$999,999.99') AS "TOTAL REVENUE GENERATED"
FROM CALLS_VIEW
GROUP BY EXTRACT(MONTH FROM DATE_TIME)
ORDER BY EXTRACT(MONTH FROM DATE_TIME);

-- 6.	Most Popular Contract

SELECT CUSTOMER_CONTRACT_PLAN, COUNT(CUSTOMER_CONTRACT_PLAN) AS CUSTOMERS, 
TO_CHAR(SUM(CALL_REVENUE_GENERATED), 'FM$999,999.99') AS "TOTAL REVENUE GENERATED"
FROM CALL_FACTS
GROUP BY CUSTOMER_CONTRACT_PLAN
ORDER BY CUSTOMERS DESC;


-- 7.	Longest Time with Customer Service
SELECT CUS_DIM_CUSD_ID, 
CUSTOMER_AGE,
CUSTOMER_SOCIAL_GRADE,
CUSTOMER_CONTRACT_PLAN,
(TO_CHAR(CUS_SERVICE_TIME/3600, 'FM99.99')) AS HOURS_WITH_CS, 
CUSTOMER_ACTIVE
FROM CALL_FACTS
WHERE CUS_SERVICE_TIME IS NOT NULL
ORDER BY CUS_SERVICE_TIME DESC
fetch  first 10 rows only;


-- Calculating Moving Average
CREATE OR REPLACE VIEW POTENTIAL_REVENUE_VIEW AS
SELECT 
EXTRACT(MONTH FROM DATE_TIME) AS MONTH,
SUM(CALL_REVENUE_GENERATED) AS TOTAL_REVENUE
FROM CALLS_VIEW
GROUP BY EXTRACT(MONTH FROM DATE_TIME)
ORDER BY EXTRACT(MONTH FROM DATE_TIME);

SELECT * FROM POTENTIAL_REVENUE_VIEW;

SELECT MONTH, TO_CHAR(TOTAL_REVENUE, 'FM$999,999.99') AS MONTHLY_REVENUE, TO_CHAR(AVG(TOTAL_REVENUE) OVER (ORDER BY MONTH ROWS BETWEEN 3 PRECEDING AND CURRENT ROW), 'FM$999,999.99') AS MOVING_AVG
FROM POTENTIAL_REVENUE_VIEW
ORDER BY MONTH;