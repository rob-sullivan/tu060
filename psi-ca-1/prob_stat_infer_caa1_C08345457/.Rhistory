"age",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the age variable
gp_smath_ages <- subset(gp_smath, gp_smath$age < 18) %>%
select(age, mG3) %>%
mutate(age = factor(gp_smath_ages$age, ordered = TRUE))
# we check our dataframe creation worked
glimpse(gp_smath_ages)
# we check we have 3 levels for age group
levels(gp_smath_ages$age)
# we get Desc stats of ages and score
gp_smath_ages %>%
group_by(age) %>%
summarise(
count_ages = n(),
mean_score = mean(mG3, na.rm = TRUE),
sd_score = sd(mG3, na.rm = TRUE)
)
# We can visually check for difference in distribution between age groups
ggplot(gp_smath_ages, aes(x = age, y = mG3, fill = age)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"age",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the age variable
gp_smath_ages <- subset(gp_smath, gp_smath$age < 18) %>%
select(age, mG3) %>%
mutate(age = factor(gp_smath_ages$age, ordered = TRUE))
# we check our dataframe creation worked
glimpse(gp_smath_ages)
# we check we have 3 levels for age group
levels(gp_smath_ages$age)
# we get Desc stats of ages and score
gp_smath_ages %>%
group_by(age) %>%
summarise(
count_ages = n(),
mean_score = mean(mG3, na.rm = TRUE),
sd_score = sd(mG3, na.rm = TRUE)
)
# We can visually check for difference in distribution between age groups
ggplot(gp_smath_ages, aes(x = age, y = mG3, fill = age)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"age",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the age variable
gp_smath_ages <- subset(gp_smath, gp_smath$age < 18) %>%
select(age, health.m, mG3) %>%
mutate(age = factor(gp_smath_ages$age, ordered = TRUE))
# we check our dataframe creation worked
glimpse(gp_smath_ages)
# we check we have 3 levels for age group
levels(gp_smath_ages$age)
# we get Desc stats of ages and score
gp_smath_ages %>%
group_by(age) %>%
summarise(
count_ages = n(),
mean_score = mean(mG3, na.rm = TRUE),
sd_score = sd(mG3, na.rm = TRUE)
)
# We can visually check for difference in distribution between age groups
ggplot(gp_smath_ages, aes(x = age, y = mG3, fill = age)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"age",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the age variable
gp_smath_ages <- subset(gp_smath, gp_smath$age < 18) %>%
select(age, health.m, mG3) %>%
mutate(age = factor(gp_smath_ages$age, ordered = TRUE))
# we check our dataframe creation worked
glimpse(gp_smath_ages)
# we check we have 3 levels for age group
levels(gp_smath_ages$age)
# we get Desc stats of ages and score
gp_smath_ages %>%
group_by(age) %>%
summarise(
count_ages = n(),
mean_score = mean(mG3, na.rm = TRUE),
sd_score = sd(mG3, na.rm = TRUE)
)
# We can visually check for difference in distribution between age groups
ggplot(gp_smath_ages, aes(x = age, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"age",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the age variable
gp_smath_ages <- subset(gp_smath, gp_smath$age < 18) %>%
select(age, health.m, mG3) %>%
mutate(age = factor(gp_smath_ages$age, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath_ages, aes(x = age, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
anova_two_way <- aov(mG3~age+health, data = gp_smath_ages)
anova_two_way <- aov(mG3~age+health.m, data = gp_smath_ages)
summary(anova_two_way)
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath_g %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath_g$guardian.m, ordered = TRUE))
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath_g <- gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath_g$guardian.m, ordered = TRUE))
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath_g$guardian.m, ordered = TRUE))
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath$guardian.m, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath, aes(x = guardian.m, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(health.m = factor(gp_smath$health.m, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath, aes(x = health.m, y = mG3, fill = guardian.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath$guardian.m, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath, aes(x = guardian.m, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
anova_two_way <- aov(mG3~guardian.m+health.m, data = gp_smath_ages)
anova_two_way <- aov(mG3~guardian.m+health.m, data = gp_smath)
summary(anova_two_way)
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath$guardian.m, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath, aes(x = guardian.m, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.5)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath$guardian.m, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath, aes(x = guardian.m, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.1)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath$guardian.m, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath, aes(x = guardian.m, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "red",
position = position_jitter(0.1)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath$guardian.m, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath, aes(x = guardian.m, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.1)) +
theme_classic()
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath$guardian.m, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath, aes(x = guardian.m, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
library(VIM)
library(tidyverse)
library(pastecs) #For creating descriptive statistic summaries
library(ggplot2) #For creating histograms with more detail than plot
library(psych) # Some useful descriptive functions
library(moments) #For skewness and kurtosis semTools package doesn't work
library(FSA) #For percentage
library(car) # For Levene's test for homogeneity of variance
library(effectsize) #To calculate effect size for t-test
library(coin)# For Wilcox test (non-parametric)
library(rstatix)# For calculating effect size
library(dplyr)
#These are our variables of interest - the nine continuous variables
# Import Dataset
students <- read.csv(file = 'dataset.csv', header=TRUE)
varsint<-c("school",
"age",
"Pstatus",
"Pstatus",
"guardian.m",
"traveltime.m",
"failures.m",
"schoolsup.m" ,
"romantic.m",
"goout.m",
"Dalc.m",
"Walc.m",
"health.m",
"mG3"
)
smath <- students[varsint]#subset with our variables
#characters to factors
for (i in colnames(smath)){
if(class(smath[[i]])=="character"){
smath[[i]] <- as.factor(smath[[i]])
}
}
# Data Encoding
#for (i in colnames(smath)){
#  if(class(smath[[i]])=="factor"){
#    smath[[i]] <- sapply(smath[[i]], unclass)
#  }
#}
summary(smath) #Get our summary statistics
psych::describeBy(smath$Walc.m, smath$romantic.m, mat=TRUE)
car::leveneTest(smath$Walc.m, smath$romantic.m, center=mean)
stats::t.test(Walc.m~romantic.m,var.equal=TRUE,data=smath)
# If p-value was less than 0.05 we would deem it not normally distributed and require a non-parametric test such as Wilcoxon’s rank sum test
#stats::wilcox.test(Walc.m~romantic.m, data=smath)
# No statistically significant difference was found so we do not reject the null hypothesis. We cannot say with a 95% confidence level that math students in a relationship drink more at the  weekend than those that do not.
### Cohen's d
# We can calculate Cohen's d value to see the size of our statistically significance of difference (if any)
#romantic.m_num <- sapply(smath$romantic.m, as.numeric)
#effectsize::t_to_d(t = smath$Walc.m, romantic.m_num)
psych::describeBy(smath$mG3, smath$romantic.m, mat=TRUE)
car::leveneTest(smath$mG3 ~ smath$romantic.m, center=mean)
stats::t.test(mG3~romantic.m,var.equal=TRUE,data=smath)
# If Pr(>F) was less we would assume not normally distributed and Non-parametric
#stats::wilcox.test(mG3~romantic.m, data=smath)
## Cohen's d
#We can calculate Cohen's d value to see the size of our statistically significance of difference (if any)
#romantic.m_num <- sapply(smath$romantic.m, as.numeric)
#effectsize::t_to_d(t = smath$mG3, romantic.m_num)
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"age",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the age variable
gp_smath_ages <- subset(gp_smath, gp_smath$age < 18) %>%
select(age, mG3) %>%
mutate(age = factor(gp_smath_ages$age, ordered = TRUE))
# we check our dataframe creation worked
glimpse(gp_smath_ages)
# we check we have 3 levels for age group
levels(gp_smath_ages$age)
# we get Desc stats of ages and score
gp_smath_ages %>%
group_by(age) %>%
summarise(
count_ages = n(),
mean_score = mean(mG3, na.rm = TRUE),
sd_score = sd(mG3, na.rm = TRUE)
)
# We can visually check for difference in distribution between age groups
ggplot(gp_smath_ages, aes(x = age, y = mG3, fill = age)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
#We conduct oneway ANOVA using the dplyr library
#We use Tukey as the post-hoc test option if group variances are the same and Games-Howell if they are not
anova_one_way <- aov(mG3~age, data = gp_smath_ages)
print("One Way ANOVA:")
summary(anova_one_way)
# we cannot tell which mean is different so we use Tukey
print("Tukey:")
TukeyHSD(anova_one_way)
gp_smath <- smath[which(smath$school=='GP'),]
varsint<-c("school",
"guardian.m",
"health.m",
"mG3"
)
#subset with our variables
gp_smath <- gp_smath[varsint]
#we configure the guardian variable
gp_smath %>%
select(guardian.m, health.m, mG3) %>%
mutate(guardian.m = factor(gp_smath$guardian.m, ordered = TRUE))
# We can visually check for difference in distribution between age groups and health groups
ggplot(gp_smath, aes(x = guardian.m, y = mG3, fill = health.m)) +
geom_boxplot() +
geom_jitter(shape = 15,
color = "steelblue",
position = position_jitter(0.21)) +
theme_classic()
anova_two_way <- aov(mG3~guardian.m+health.m, data = gp_smath)
summary(anova_two_way)
describe(smath)
sapply(smath, class)
test <- chisq.test(table(smath$Pstatus, smath$schoolsup))
test <- chisq.test(table(smath$Pstatus, smath$schoolsup))
test
#These are our variables of interest - the nine continuous variables
# Import Dataset
students <- read.csv(file = 'dataset.csv', header=TRUE)
varsint<-c("school",
"age",
"Pstatus",
"guardian.m",
"traveltime.m",
"failures.m",
"schoolsup.m" ,
"romantic.m",
"goout.m",
"Dalc.m",
"Walc.m",
"health.m",
"mG3"
)
smath <- students[varsint]#subset with our variables
#characters to factors
for (i in colnames(smath)){
if(class(smath[[i]])=="character"){
smath[[i]] <- as.factor(smath[[i]])
}
}
# Data Encoding
#for (i in colnames(smath)){
#  if(class(smath[[i]])=="factor"){
#    smath[[i]] <- sapply(smath[[i]], unclass)
#  }
#}
summary(smath) #Get our summary statistics
test <- chisq.test(table(smath$school, smath$schoolsup))
test
test <- chisq.test(table(smath$romantic.m, smath$schoolsup))
test
test <- chisq.test(table(smath$guardian.m , smath$schoolsup))
test
test <- chisq.test(table(smath$guardian.m, smath$schoolsup))
test
test <- chisq.test(table(smath$school, smath$schoolsup))
test
test <- chisq.test(table(smath$guardian.m, smath$schoolsup))
test
test <- fisher.test(able(smath$guardian.m, smath$schoolsup))
test <- fisher.test(table(smath$guardian.m, smath$schoolsup))
test <- chisq.test(table(smath$guardian.m, smath$schoolsup))
chisq_test
chisq_test <- chisq.test(table(smath$guardian.m, smath$schoolsup))
chisq_test
fisher_test <- fisher.test(table(smath$guardian.m, smath$schoolsup))
fisher_test
